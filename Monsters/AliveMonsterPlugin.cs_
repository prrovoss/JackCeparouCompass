namespace Turbo.Plugins.Jack.Monsters
{
    using Turbo.Plugins.Default;

    public class AliveMonsterPlugin : BasePlugin, IInGameWorldPainter
    {
        public WorldDecoratorCollection Decorator { get; set; }

        public override void Load(IController hud)
        {
            base.Load(hud);

            /*<!-- Mark all alive mobs with shapes below feet / mix and match -->  <!-- TO DISABLE: change enabled="1" to enabled="0" -->
            <Mark_Alive_Mobs enabled="1" speech_text="" extra_decorators="deco1/ground_circle,deco2/ground_shape" keywords="alive" after_clip="0">
	            <ground_circle enabled="1" radius="0.2" color="255,255,255,0" stroke="1.5" />  <!-- yellow circle -->
	            <deco1 enabled="1" radius="0.1" color="255,255,0,0" stroke="1.0" />  <!-- red dot -->
	            <ground_shape enabled="0" radius="0.2" shape="x" color="200,255,255,10" stroke="4" />  <!-- green diamond -->
	            <deco2 enabled="0" radius="0.2" shape="x" color="200,0,255,0" stroke="1.2" />  <!-- tiny green x -->
            </Mark_Alive_Mobs>*/
            Decorator = new WorldDecoratorCollection(
                new GroundCircleDecorator(Hud)
                {
                    Brush = Hud.Render.CreateBrush(255, 255, 255, 0, 1.5f),
                    Radius = 0.2f,
                },
                new GroundCircleDecorator(Hud)
                {
                    Brush = Hud.Render.CreateBrush(255, 255, 0, 0, 1f),
                    Radius = 0.1f,
                },
                //new GroundShapeDecorator(Hud)
                //{
                //    Enabled = false,
                //    Brush = Hud.Render.CreateBrush(200, 255, 255, 10, 4f),
                //    Radius = 0.2f,
                //    Shape = GroundShape.X,
                //},
                new GroundShapeDecorator(Hud)
                {
                    Enabled = false,
                    Brush = Hud.Render.CreateBrush(200, 0, 255, 0, 1.2f),
                    Radius = 0.2f,
                    Shape = GroundShape.X,
                }
            );
        }

        public void PaintWorld(WorldLayer layer)
        {
            var monsters = Hud.Game.AliveMonsters;

            foreach (var monster in monsters)
            {
                Decorator.Paint(layer, monster, monster.FloorCoordinate, string.Empty);
            }
        }
    }
}